import org.gradle.api.internal.project.DefaultProject

plugins {
    id 'java-library'
    id 'org.springframework.boot' version "3.0.3"
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.dingdangmaoup'
version = '1.0.0'
description = 'dingdangdangdang-dependencies'
sourceCompatibility = '17'
ext {
    springBootVersion = '3.0.3'
    colaVersion = '4.3.1'
    mybatisPlusVersion = '3.5.3'
    fastjson2Version = '2.0.24'
    okhttp3Version = '4.10.0'
    protobufVersion = '4.0.0-rc-2'
    protobufJavaFormatVersion = '1.4'
    grpcVersion = '1.53.0'
    bootstrapProject = project(":fourd:fourd-bootstrap") as DefaultProject
}

allprojects {
    apply {
        plugin('java-library')
        plugin('org.springframework.boot')
        plugin('io.spring.dependency-management')
    }

    configurations {
        configureEach {
            exclude module: 'spring-boot-starter-tomcat'
            exclude module: 'undertow-websockets-jsr'
            resolutionStrategy {
                cacheChangingModulesFor(0, 'seconds')
                cacheDynamicVersionsFor(0, 'seconds')
            }
        }

    }
    repositories {
        maven {
            url 'http://10.10.201.24:8081/repository/maven-public/'
            allowInsecureProtocol = true
        }
        mavenCentral()
    }
    dependencies {
        api platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        api platform("com.alibaba.cola:cola-components-bom:${colaVersion}")
        api platform("com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}")
        api platform("com.alibaba.fastjson2:fastjson2:${fastjson2Version}")
        api platform("com.alibaba.fastjson2:fastjson2-extension-spring6:${fastjson2Version}")
        api platform("com.squareup.okhttp3:okhttp-bom:${okhttp3Version}")
        api platform("com.google.protobuf:protobuf-java:${protobufVersion}")
        api platform("com.google.protobuf:protobuf-java-util:${protobufVersion}")
        api platform("com.googlecode.protobuf-java-format:protobuf-java-format:${protobufJavaFormatVersion}")
        api platform("io.grpc:grpc-all:${grpcVersion}")

        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
    }
    if (project != bootstrapProject) {
        bootJar {
            enabled = false
        }
        jar {
            enabled = true
        }
    }
}

subprojects {
    group = rootProject.group
    version = rootProject.version
    test {
        useJUnitPlatform()
    }
}
//tasks {
//    runIde {
//// 启用热重载功能，使用Build菜单编译项目后无需重启调试进程即可完成, 仅支持JBR
//        jvmArgs = listOf("-XX:+AllowEnhancedClassRedefinition")
//    }
//}